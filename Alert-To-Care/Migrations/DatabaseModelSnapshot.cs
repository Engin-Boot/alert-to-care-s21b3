// <auto-generated />
using Alert_To_Care.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Alert_To_Care.Migrations
{
    [DbContext(typeof(Database))]
    partial class DatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Alert_To_Care.Models.BedDataModel", b =>
                {
                    b.Property<string>("BedId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("BedStatus")
                        .HasColumnType("bit");

                    b.Property<string>("IcuDataModelIcuId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IcuId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BedId");

                    b.HasIndex("IcuDataModelIcuId");

                    b.ToTable("Beds");

                    b.HasData(
                        new
                        {
                            BedId = "12",
                            BedStatus = true,
                            IcuId = "25a",
                            PatientId = "1"
                        },
                        new
                        {
                            BedId = "32",
                            BedStatus = true,
                            IcuId = "25a",
                            PatientId = "2"
                        },
                        new
                        {
                            BedId = "40",
                            BedStatus = false,
                            IcuId = "25a",
                            PatientId = ""
                        });
                });

            modelBuilder.Entity("Alert_To_Care.Models.IcuDataModel", b =>
                {
                    b.Property<string>("IcuId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Layout")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalNoOfBeds")
                        .HasColumnType("int");

                    b.HasKey("IcuId");

                    b.ToTable("Icu");
                });

            modelBuilder.Entity("Alert_To_Care.Models.PatientDataModel", b =>
                {
                    b.Property<string>("PatientId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BedId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContactNo")
                        .HasColumnType("int")
                        .HasMaxLength(10);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientAge")
                        .HasColumnType("int");

                    b.Property<string>("PatientName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientId");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            PatientId = "1",
                            Address = "1ab street, swe city",
                            BedId = "12",
                            ContactNo = 987653412,
                            Email = "123@abc.com",
                            PatientAge = 30,
                            PatientName = "Sneha"
                        },
                        new
                        {
                            PatientId = "2",
                            Address = "123 street, swe city",
                            BedId = "32",
                            ContactNo = 874652391,
                            Email = "223@aer.com",
                            PatientAge = 42,
                            PatientName = "priya"
                        });
                });

            modelBuilder.Entity("Alert_To_Care.Models.BedDataModel", b =>
                {
                    b.HasOne("Alert_To_Care.Models.IcuDataModel", null)
                        .WithMany("IcuBedList")
                        .HasForeignKey("IcuDataModelIcuId");
                });

            modelBuilder.Entity("Alert_To_Care.Models.PatientDataModel", b =>
                {
                    b.OwnsOne("Alert_To_Care.Models.VitalsDataModel", "vitals", b1 =>
                        {
                            b1.Property<string>("PatientId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<float>("Bpm")
                                .HasColumnType("real");

                            b1.Property<string>("PatientBedId")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PatientDataModelPatientId")
                                .IsRequired()
                                .HasColumnType("nvarchar(450)");

                            b1.Property<float>("RespRate")
                                .HasColumnType("real");

                            b1.Property<float>("Spo2")
                                .HasColumnType("real");

                            b1.HasKey("PatientId");

                            b1.HasIndex("PatientDataModelPatientId")
                                .IsUnique();

                            b1.ToTable("Patients1");

                            b1.WithOwner()
                                .HasForeignKey("PatientDataModelPatientId");

                            b1.HasData(
                                new
                                {
                                    PatientId = "1",
                                    Bpm = 60f,
                                    PatientBedId = "12",
                                    PatientDataModelPatientId = "1",
                                    RespRate = 42f,
                                    Spo2 = 90f
                                },
                                new
                                {
                                    PatientId = "2",
                                    Bpm = 40f,
                                    PatientBedId = "32",
                                    PatientDataModelPatientId = "2",
                                    RespRate = 57f,
                                    Spo2 = 82f
                                });
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
